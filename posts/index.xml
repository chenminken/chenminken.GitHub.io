<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - ChenMin</title>
        <link>http://imchenmin.com/posts/</link>
        <description>所有文章 | ChenMin</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 04 Nov 2021 13:57:41 &#43;0800</lastBuildDate><atom:link href="http://imchenmin.com/posts/" rel="self" type="application/rss+xml" /><item>
    <title>82. Remove Duplicates from Sorted List II</title>
    <link>http://imchenmin.com/posts/leetcode82/</link>
    <pubDate>Thu, 04 Nov 2021 13:57:41 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://imchenmin.com/posts/leetcode82/</guid>
    <description><![CDATA[Given the head of a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list . Return the linked list sorted as well . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 class Solution { public: ListNode* deleteDuplicates(ListNode* head) { //base]]></description>
</item><item>
    <title>61.Rotate List</title>
    <link>http://imchenmin.com/posts/leetcode61/</link>
    <pubDate>Thu, 04 Nov 2021 13:57:34 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://imchenmin.com/posts/leetcode61/</guid>
    <description><![CDATA[Given the head of a linked list, rotate the list to the right by k places. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 class Solution { public: ListNode* rotateRight(ListNode* head, int k) { // 建立一个环，维持local 和 ta]]></description>
</item><item>
    <title>23.Merge k Sorted Lists</title>
    <link>http://imchenmin.com/posts/leetcode23/</link>
    <pubDate>Wed, 03 Nov 2021 22:55:04 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://imchenmin.com/posts/leetcode23/</guid>
    <description><![CDATA[You are given an array of k linked-lists lists, each linked-list is sorted in ascending order. Merge all the linked-lists into one sorted linked-list and return it. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 class Solution { public:]]></description>
</item><item>
    <title>21. Merge Two Sorted Lists</title>
    <link>http://imchenmin.com/posts/leetcode21/</link>
    <pubDate>Wed, 03 Nov 2021 22:55:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://imchenmin.com/posts/leetcode21/</guid>
    <description><![CDATA[Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists. 这道题重点在 dummy 节点上。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 class]]></description>
</item><item>
    <title>300.Longest Increasing Subsequence</title>
    <link>http://imchenmin.com/posts/leetcode300/</link>
    <pubDate>Tue, 02 Nov 2021 14:34:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://imchenmin.com/posts/leetcode300/</guid>
    <description><![CDATA[Given an integer array nums, return the length of the longest strictly increasing subsequence. A subsequence is a sequence that can be derived from an array by deleting some or no elements without changing the order of the remaining elements. For example, [3,6,2,7] is a subsequence of the array [0,3,1,6,2,2,7]. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 //]]></description>
</item><item>
    <title>53. Maximum Subarray</title>
    <link>http://imchenmin.com/posts/leetcode53/</link>
    <pubDate>Tue, 02 Nov 2021 14:34:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://imchenmin.com/posts/leetcode53/</guid>
    <description><![CDATA[Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum . A subarray is a contiguous part of an array. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Solution { public: int maxSubArray(vector&lt;int&gt;&amp; nums) { vector&lt;int&gt; dp(nums.size(), 0); dp[0] = nums[0]; for (int i=1; i&lt;dp.size(); i++) {]]></description>
</item><item>
    <title>322.Coin Change</title>
    <link>http://imchenmin.com/posts/leetcode322/</link>
    <pubDate>Mon, 01 Nov 2021 23:14:08 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://imchenmin.com/posts/leetcode322/</guid>
    <description><![CDATA[Coin Change You are given an integer array coins representing coins of different denominations and an integer amount representing a total amount of money. Return the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return -1. You may assume that you have an infinite number of each kind of coin. 1]]></description>
</item><item>
    <title>32.Longest Valid Parentheses</title>
    <link>http://imchenmin.com/posts/leetcode32/</link>
    <pubDate>Mon, 01 Nov 2021 23:10:09 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://imchenmin.com/posts/leetcode32/</guid>
    <description><![CDATA[Given a string containing just the characters &lsquo;(&rsquo; and &lsquo;)&rsquo;, find the length of the longest valid (well-formed) parentheses substring. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 class Solution { public: int longestValidParentheses(string s) { // using stack to process stack&lt;int&gt; v; // 找到所有配对]]></description>
</item><item>
    <title>富兰克林自传</title>
    <link>http://imchenmin.com/posts/franklins-autobiography/</link>
    <pubDate>Fri, 29 Oct 2021 21:59:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://imchenmin.com/posts/franklins-autobiography/</guid>
    <description><![CDATA[算上在火车上听的内容，我已经把《富兰克林自传》看完了。英国议会的那一个章节(第四封信)，我只听了没有第二遍看。对于政治的东西目前没有想太了解]]></description>
</item><item>
    <title>新服务器迁移postgres数据库</title>
    <link>http://imchenmin.com/posts/postgres-note/</link>
    <pubDate>Fri, 29 Oct 2021 21:59:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://imchenmin.com/posts/postgres-note/</guid>
    <description><![CDATA[课题组要部署一个云服务，之前用的是我个人申请的学生版服务器，价格优惠。快到期需要续费，但是优惠版的服务器不能够继续以优惠价格续费，正常的价格]]></description>
</item></channel>
</rss>
